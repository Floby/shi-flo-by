{
  "name": "mux-demux-shoe",
  "version": "0.2.7",
  "description": "A mux demux connection through shoe!",
  "keywords": [],
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Raynos/mux-demux-shoe.git"
  },
  "main": "index",
  "homepage": "https://github.com/Raynos/mux-demux-shoe",
  "browserify": "browser.js",
  "contributors": [
    {
      "name": "Jake Verbaten"
    }
  ],
  "bugs": {
    "url": "https://github.com/Raynos/mux-demux-shoe/issues",
    "email": "raynos2@gmail.com"
  },
  "dependencies": {
    "mux-demux": "git://github.com/Raynos/mux-demux.git#error-messages",
    "shoe": "0.0.4"
  },
  "devDependencies": {
    "browserify": "~1.14.4",
    "browserify-server": "~0.2.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/Raynos/mux-demux-shoe/raw/master/LICENSE"
    }
  ],
  "scripts": {},
  "readme": "# mux-demux-shoe\n\nA mux demux connection through shoe!\n\nSimilar to [mux-demux-net][3], basically give you a MDM connection or a MDM server through shoe\n\n## Example Server\n\n    var shoe = require(\"mux-demux-shoe\")\n\n    var sock = shoe(function (stream) {\n        // stream from MuxDemux with the meta property set\n        if (stream.meta === \"one\") {\n            stream.on(\"data\", console.log.bind(console))\n        }\n    })\n\n    sock.install(someHttpServer, \"/shoe\")\n\n## Example client\n\n    var shoe = require(\"mux-demux-shoe\")\n        , mdm = shoe(\"/shoe\")\n\n    var one = mdm.createStream(\"one\")\n\n    one.write(\"hello world\")\n\n## Installation\n\n`npm install mux-demux-shoe`\n\n## Tests\n\n`make test`\n\n## Contributors\n\n - Raynos\n\n## MIT Licenced\n\n  [1]: https://secure.travis-ci.org/Raynos/mux-demux-shoe.png\n  [2]: http://travis-ci.org/Raynos/mux-demux-shoe\n  [3]: https://github.com/Raynos/mux-demux-net",
  "readmeFilename": "README.md",
  "_id": "mux-demux-shoe@0.2.7",
  "_from": "mux-demux-shoe@"
}
